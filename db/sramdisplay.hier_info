|top_module
clk => sub_module_lcd:A.clk
clk => sub_module_ram:B.clk
tsw[0] => sub_module_lcd:A.addr_in[0]
tsw[0] => sub_module_ram:B.addr[0]
tsw[1] => sub_module_lcd:A.addr_in[1]
tsw[1] => sub_module_ram:B.addr[1]
tsw[2] => sub_module_lcd:A.addr_in[2]
tsw[2] => sub_module_ram:B.addr[2]
tsw[3] => sub_module_lcd:A.addr_in[3]
tsw[3] => sub_module_ram:B.addr[3]
tsw[4] => sub_module_lcd:A.addr_in[4]
tsw[4] => sub_module_ram:B.addr[4]
tsw[5] => sub_module_lcd:A.addr_in[5]
tsw[5] => sub_module_ram:B.addr[5]
tsw[6] => sub_module_lcd:A.addr_in[6]
tsw[6] => sub_module_ram:B.addr[6]
tsw[7] => sub_module_lcd:A.addr_in[7]
tsw[7] => sub_module_ram:B.addr[7]
tsw[8] => sub_module_lcd:A.data_in[0]
tsw[8] => sub_module_ram:B.data_write[0]
tsw[9] => sub_module_lcd:A.data_in[1]
tsw[9] => sub_module_ram:B.data_write[1]
tsw[10] => sub_module_lcd:A.data_in[2]
tsw[10] => sub_module_ram:B.data_write[2]
tsw[11] => sub_module_lcd:A.data_in[3]
tsw[11] => sub_module_ram:B.data_write[3]
tsw[12] => sub_module_lcd:A.data_in[4]
tsw[12] => sub_module_ram:B.data_write[4]
tsw[13] => sub_module_lcd:A.data_in[5]
tsw[13] => sub_module_ram:B.data_write[5]
tsw[14] => sub_module_lcd:A.data_in[6]
tsw[14] => sub_module_ram:B.data_write[6]
tsw[15] => sub_module_lcd:A.data_in[7]
tsw[15] => sub_module_ram:B.data_write[7]
tsw[16] => ~NO_FANOUT~
tsw[17] => ~NO_FANOUT~
psw[0] => sub_module_ram:B.reset
psw[1] => ~NO_FANOUT~
psw[2] => sub_module_ram:B.mem
psw[3] => sub_module_lcd:A.reset_n
psw[3] => sub_module_ram:B.rw
ad_sram[0] <= sub_module_ram:B.ad[0]
ad_sram[1] <= sub_module_ram:B.ad[1]
ad_sram[2] <= sub_module_ram:B.ad[2]
ad_sram[3] <= sub_module_ram:B.ad[3]
ad_sram[4] <= sub_module_ram:B.ad[4]
ad_sram[5] <= sub_module_ram:B.ad[5]
ad_sram[6] <= sub_module_ram:B.ad[6]
ad_sram[7] <= sub_module_ram:B.ad[7]
ad_sram[8] <= sub_module_ram:B.ad[8]
ad_sram[9] <= sub_module_ram:B.ad[9]
ad_sram[10] <= sub_module_ram:B.ad[10]
ad_sram[11] <= sub_module_ram:B.ad[11]
ad_sram[12] <= sub_module_ram:B.ad[12]
ad_sram[13] <= sub_module_ram:B.ad[13]
ad_sram[14] <= sub_module_ram:B.ad[14]
ad_sram[15] <= sub_module_ram:B.ad[15]
ad_sram[16] <= sub_module_ram:B.ad[16]
ad_sram[17] <= sub_module_ram:B.ad[17]
ad_sram[18] <= sub_module_ram:B.ad[18]
ad_sram[19] <= sub_module_ram:B.ad[19]
dio_sram[0] <> sub_module_ram:B.dio[0]
dio_sram[1] <> sub_module_ram:B.dio[1]
dio_sram[2] <> sub_module_ram:B.dio[2]
dio_sram[3] <> sub_module_ram:B.dio[3]
dio_sram[4] <> sub_module_ram:B.dio[4]
dio_sram[5] <> sub_module_ram:B.dio[5]
dio_sram[6] <> sub_module_ram:B.dio[6]
dio_sram[7] <> sub_module_ram:B.dio[7]
dio_sram[8] <> sub_module_ram:B.dio[8]
dio_sram[9] <> sub_module_ram:B.dio[9]
dio_sram[10] <> sub_module_ram:B.dio[10]
dio_sram[11] <> sub_module_ram:B.dio[11]
dio_sram[12] <> sub_module_ram:B.dio[12]
dio_sram[13] <> sub_module_ram:B.dio[13]
dio_sram[14] <> sub_module_ram:B.dio[14]
dio_sram[15] <> sub_module_ram:B.dio[15]
we_n_sram <= sub_module_ram:B.we_n
oe_n_sram <= sub_module_ram:B.oe_n
ce_n_sram <= sub_module_ram:B.ce_n
lb_n_sram <= <GND>
ub_n_sram <= <GND>
dio_lcd[0] <> sub_module_lcd:A.dio[0]
dio_lcd[1] <> sub_module_lcd:A.dio[1]
dio_lcd[2] <> sub_module_lcd:A.dio[2]
dio_lcd[3] <> sub_module_lcd:A.dio[3]
dio_lcd[4] <> sub_module_lcd:A.dio[4]
dio_lcd[5] <> sub_module_lcd:A.dio[5]
dio_lcd[6] <> sub_module_lcd:A.dio[6]
dio_lcd[7] <> sub_module_lcd:A.dio[7]
en_lcd <= sub_module_lcd:A.en_l
rw_lcd <= sub_module_lcd:A.rw_l
rs_lcd <= sub_module_lcd:A.rs_l
pon_lcd <= sub_module_lcd:A.pon_l
blon_lcd <= sub_module_lcd:A.blon_l
segoutL[0] <= sub_module_ram:B.segoutL[0]
segoutL[1] <= sub_module_ram:B.segoutL[1]
segoutL[2] <= sub_module_ram:B.segoutL[2]
segoutL[3] <= sub_module_ram:B.segoutL[3]
segoutL[4] <= sub_module_ram:B.segoutL[4]
segoutL[5] <= sub_module_ram:B.segoutL[5]
segoutL[6] <= sub_module_ram:B.segoutL[6]
segoutL[7] <= sub_module_ram:B.segoutL[7]
segoutL[8] <= sub_module_ram:B.segoutL[8]
segoutL[9] <= sub_module_ram:B.segoutL[9]
segoutL[10] <= sub_module_ram:B.segoutL[10]
segoutL[11] <= sub_module_ram:B.segoutL[11]
segoutL[12] <= sub_module_ram:B.segoutL[12]
segoutL[13] <= sub_module_ram:B.segoutL[13]
segoutM[0] <= sub_module_ram:B.segoutM[0]
segoutM[1] <= sub_module_ram:B.segoutM[1]
segoutM[2] <= sub_module_ram:B.segoutM[2]
segoutM[3] <= sub_module_ram:B.segoutM[3]
segoutM[4] <= sub_module_ram:B.segoutM[4]
segoutM[5] <= sub_module_ram:B.segoutM[5]
segoutM[6] <= sub_module_ram:B.segoutM[6]
segoutM[7] <= sub_module_ram:B.segoutM[7]
segoutM[8] <= sub_module_ram:B.segoutM[8]
segoutM[9] <= sub_module_ram:B.segoutM[9]
segoutM[10] <= sub_module_ram:B.segoutM[10]
segoutM[11] <= sub_module_ram:B.segoutM[11]
segoutM[12] <= sub_module_ram:B.segoutM[12]
segoutM[13] <= sub_module_ram:B.segoutM[13]
segoutR[0] <= sub_module_ram:B.segoutR[0]
segoutR[1] <= sub_module_ram:B.segoutR[1]
segoutR[2] <= sub_module_ram:B.segoutR[2]
segoutR[3] <= sub_module_ram:B.segoutR[3]
segoutR[4] <= sub_module_ram:B.segoutR[4]
segoutR[5] <= sub_module_ram:B.segoutR[5]
segoutR[6] <= sub_module_ram:B.segoutR[6]
segoutR[7] <= sub_module_ram:B.segoutR[7]
segoutR[8] <= sub_module_ram:B.segoutR[8]
segoutR[9] <= sub_module_ram:B.segoutR[9]
segoutR[10] <= sub_module_ram:B.segoutR[10]
segoutR[11] <= sub_module_ram:B.segoutR[11]
segoutR[12] <= sub_module_ram:B.segoutR[12]
segoutR[13] <= sub_module_ram:B.segoutR[13]
segoutR[14] <= sub_module_ram:B.segoutR[14]
segoutR[15] <= sub_module_ram:B.segoutR[15]
segoutR[16] <= sub_module_ram:B.segoutR[16]
segoutR[17] <= sub_module_ram:B.segoutR[17]
segoutR[18] <= sub_module_ram:B.segoutR[18]
segoutR[19] <= sub_module_ram:B.segoutR[19]
segoutR[20] <= sub_module_ram:B.segoutR[20]
segoutR[21] <= sub_module_ram:B.segoutR[21]
segoutR[22] <= sub_module_ram:B.segoutR[22]
segoutR[23] <= sub_module_ram:B.segoutR[23]
segoutR[24] <= sub_module_ram:B.segoutR[24]
segoutR[25] <= sub_module_ram:B.segoutR[25]
segoutR[26] <= sub_module_ram:B.segoutR[26]
segoutR[27] <= sub_module_ram:B.segoutR[27]


|top_module|sub_module_lcd:A
clk => mod5:ck1.clk
reset_n => mod5:ck1.Nreset
reset_n => userlogic_ad_wr:ul1.reset_n
reset_n => lcdcontrollerslow:lc1.reset_n
addr_in[0] => userlogic_ad_wr:ul1.addr[0]
addr_in[1] => userlogic_ad_wr:ul1.addr[1]
addr_in[2] => userlogic_ad_wr:ul1.addr[2]
addr_in[3] => userlogic_ad_wr:ul1.addr[3]
addr_in[4] => userlogic_ad_wr:ul1.addr[4]
addr_in[5] => userlogic_ad_wr:ul1.addr[5]
addr_in[6] => userlogic_ad_wr:ul1.addr[6]
addr_in[7] => userlogic_ad_wr:ul1.addr[7]
data_in[0] => userlogic_ad_wr:ul1.data[0]
data_in[1] => userlogic_ad_wr:ul1.data[1]
data_in[2] => userlogic_ad_wr:ul1.data[2]
data_in[3] => userlogic_ad_wr:ul1.data[3]
data_in[4] => userlogic_ad_wr:ul1.data[4]
data_in[5] => userlogic_ad_wr:ul1.data[5]
data_in[6] => userlogic_ad_wr:ul1.data[6]
data_in[7] => userlogic_ad_wr:ul1.data[7]
dio[0] <> lcdcontrollerslow:lc1.dio[0]
dio[1] <> lcdcontrollerslow:lc1.dio[1]
dio[2] <> lcdcontrollerslow:lc1.dio[2]
dio[3] <> lcdcontrollerslow:lc1.dio[3]
dio[4] <> lcdcontrollerslow:lc1.dio[4]
dio[5] <> lcdcontrollerslow:lc1.dio[5]
dio[6] <> lcdcontrollerslow:lc1.dio[6]
dio[7] <> lcdcontrollerslow:lc1.dio[7]
en_l <= lcdcontrollerslow:lc1.en_l
rw_l <= lcdcontrollerslow:lc1.rw_l
rs_l <= lcdcontrollerslow:lc1.rs_l
pon_l <= lcdcontrollerslow:lc1.pon_l
blon_l <= lcdcontrollerslow:lc1.blon_l


|top_module|sub_module_lcd:A|mod5:ck1
clk => q[0].CLK
clk => q[1].CLK
clk => q[2].CLK
clk => q[3].CLK
clk => q[4].CLK
clk => q[5].CLK
clk => q[6].CLK
clk => q[7].CLK
clk => q[8].CLK
clk => q[9].CLK
clk => q[10].CLK
clk => q[11].CLK
clk => q[12].CLK
clk => q[13].CLK
clk => q[14].CLK
clk => q[15].CLK
clk => q[16].CLK
clk => q[17].CLK
clk => q[18].CLK
clk => q[19].CLK
clk => q[20].CLK
clk => q[21].CLK
Nreset => q[0].ACLR
Nreset => q[1].ACLR
Nreset => q[2].ACLR
Nreset => q[3].ACLR
Nreset => q[4].ACLR
Nreset => q[5].ACLR
Nreset => q[6].ACLR
Nreset => q[7].ACLR
Nreset => q[8].ACLR
Nreset => q[9].ACLR
Nreset => q[10].ACLR
Nreset => q[11].ACLR
Nreset => q[12].ACLR
Nreset => q[13].ACLR
Nreset => q[14].ACLR
Nreset => q[15].ACLR
Nreset => q[16].ACLR
Nreset => q[17].ACLR
Nreset => q[18].ACLR
Nreset => q[19].ACLR
Nreset => q[20].ACLR
Nreset => q[21].ACLR
Output_clk <= q[21].DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_lcd:A|userlogic_ad_wr:ul1
clk => send_enable~reg0.CLK
clk => data_write[0]~reg0.CLK
clk => data_write[1]~reg0.CLK
clk => data_write[2]~reg0.CLK
clk => data_write[3]~reg0.CLK
clk => data_write[4]~reg0.CLK
clk => data_write[5]~reg0.CLK
clk => data_write[6]~reg0.CLK
clk => data_write[7]~reg0.CLK
clk => data_write[8]~reg0.CLK
clk => data_write[9]~reg0.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
reset_n => send_enable.IN0
reset_n => data_write[0]~reg0.ACLR
reset_n => data_write[1]~reg0.ACLR
reset_n => data_write[2]~reg0.ACLR
reset_n => data_write[3]~reg0.ACLR
reset_n => data_write[4]~reg0.ACLR
reset_n => data_write[5]~reg0.ACLR
reset_n => data_write[6]~reg0.ACLR
reset_n => data_write[7]~reg0.ACLR
reset_n => data_write[8]~reg0.ACLR
reset_n => data_write[9]~reg0.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => count[15].ACLR
reset_n => count[16].ACLR
reset_n => count[17].ACLR
reset_n => count[18].ACLR
reset_n => count[19].ACLR
reset_n => count[20].ACLR
reset_n => count[21].ACLR
reset_n => count[22].ACLR
reset_n => count[23].ACLR
reset_n => count[24].ACLR
reset_n => count[25].ACLR
reset_n => count[26].ACLR
reset_n => count[27].ACLR
reset_n => count[28].ACLR
reset_n => count[29].ACLR
reset_n => count[30].ACLR
reset_n => count[31].ACLR
addr[0] => LessThan2.IN8
addr[0] => Add2.IN8
addr[0] => data_write.DATAA
addr[1] => LessThan2.IN7
addr[1] => Add2.IN7
addr[1] => data_write.DATAA
addr[2] => LessThan2.IN6
addr[2] => Add2.IN6
addr[2] => data_write.DATAA
addr[3] => LessThan2.IN5
addr[3] => Add2.IN5
addr[3] => data_write.DATAA
addr[4] => LessThan1.IN8
addr[4] => Add1.IN8
addr[4] => data_write.DATAA
addr[5] => LessThan1.IN7
addr[5] => Add1.IN7
addr[5] => data_write.DATAA
addr[6] => LessThan1.IN6
addr[6] => Add1.IN6
addr[6] => data_write.DATAA
addr[7] => LessThan1.IN5
addr[7] => Add1.IN5
addr[7] => data_write.DATAA
data[0] => LessThan4.IN8
data[0] => Add4.IN8
data[0] => data_write.DATAA
data[1] => LessThan4.IN7
data[1] => Add4.IN7
data[1] => data_write.DATAA
data[2] => LessThan4.IN6
data[2] => Add4.IN6
data[2] => data_write.DATAA
data[3] => LessThan4.IN5
data[3] => Add4.IN5
data[3] => data_write.DATAA
data[4] => LessThan3.IN8
data[4] => Add3.IN8
data[4] => data_write.DATAA
data[5] => LessThan3.IN7
data[5] => Add3.IN7
data[5] => data_write.DATAA
data[6] => LessThan3.IN6
data[6] => Add3.IN6
data[6] => data_write.DATAA
data[7] => LessThan3.IN5
data[7] => Add3.IN5
data[7] => data_write.DATAA
data_write[0] <= data_write[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[1] <= data_write[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[2] <= data_write[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[3] <= data_write[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[4] <= data_write[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[5] <= data_write[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[6] <= data_write[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[7] <= data_write[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[8] <= data_write[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_write[9] <= data_write[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
send_enable <= send_enable~reg0.DB_MAX_OUTPUT_PORT_TYPE
busy => send_enable.IN1
busy => process_0.IN1
busy => count[0].ENA
busy => data_write[9]~reg0.ENA
busy => data_write[8]~reg0.ENA
busy => data_write[7]~reg0.ENA
busy => data_write[6]~reg0.ENA
busy => data_write[5]~reg0.ENA
busy => data_write[4]~reg0.ENA
busy => data_write[3]~reg0.ENA
busy => data_write[2]~reg0.ENA
busy => data_write[1]~reg0.ENA
busy => data_write[0]~reg0.ENA
busy => count[31].ENA
busy => count[30].ENA
busy => count[29].ENA
busy => count[28].ENA
busy => count[27].ENA
busy => count[26].ENA
busy => count[25].ENA
busy => count[24].ENA
busy => count[23].ENA
busy => count[22].ENA
busy => count[21].ENA
busy => count[20].ENA
busy => count[19].ENA
busy => count[18].ENA
busy => count[17].ENA
busy => count[16].ENA
busy => count[15].ENA
busy => count[14].ENA
busy => count[13].ENA
busy => count[12].ENA
busy => count[11].ENA
busy => count[10].ENA
busy => count[9].ENA
busy => count[8].ENA
busy => count[7].ENA
busy => count[6].ENA
busy => count[5].ENA
busy => count[4].ENA
busy => count[3].ENA
busy => count[2].ENA
busy => count[1].ENA
data_read[0] => ~NO_FANOUT~
data_read[1] => ~NO_FANOUT~
data_read[2] => ~NO_FANOUT~
data_read[3] => ~NO_FANOUT~
data_read[4] => ~NO_FANOUT~
data_read[5] => ~NO_FANOUT~
data_read[6] => ~NO_FANOUT~
data_read[7] => ~NO_FANOUT~


|top_module|sub_module_lcd:A|lcdcontrollerslow:lc1
clk => busy_reg.CLK
clk => rs_reg.CLK
clk => rw_reg.CLK
clk => en_reg.CLK
clk => data_read_reg[0].CLK
clk => data_read_reg[1].CLK
clk => data_read_reg[2].CLK
clk => data_read_reg[3].CLK
clk => data_read_reg[4].CLK
clk => data_read_reg[5].CLK
clk => data_read_reg[6].CLK
clk => data_read_reg[7].CLK
clk => data_write_reg[0].CLK
clk => data_write_reg[1].CLK
clk => data_write_reg[2].CLK
clk => data_write_reg[3].CLK
clk => data_write_reg[4].CLK
clk => data_write_reg[5].CLK
clk => data_write_reg[6].CLK
clk => data_write_reg[7].CLK
clk => state~1.DATAIN
reset_n => busy_reg.PRESET
reset_n => rs_reg.ACLR
reset_n => rw_reg.ACLR
reset_n => en_reg.ACLR
reset_n => data_read_reg[0].ACLR
reset_n => data_read_reg[1].ACLR
reset_n => data_read_reg[2].ACLR
reset_n => data_read_reg[3].ACLR
reset_n => data_read_reg[4].ACLR
reset_n => data_read_reg[5].ACLR
reset_n => data_read_reg[6].ACLR
reset_n => data_read_reg[7].ACLR
reset_n => data_write_reg[0].ACLR
reset_n => data_write_reg[1].ACLR
reset_n => data_write_reg[2].ACLR
reset_n => data_write_reg[3].ACLR
reset_n => data_write_reg[4].ACLR
reset_n => data_write_reg[5].ACLR
reset_n => data_write_reg[6].ACLR
reset_n => data_write_reg[7].ACLR
reset_n => state~3.DATAIN
data_write[0] => data_write_reg_next.DATAB
data_write[1] => data_write_reg_next.DATAB
data_write[2] => data_write_reg_next.DATAB
data_write[3] => data_write_reg_next.DATAB
data_write[4] => data_write_reg_next.DATAB
data_write[5] => data_write_reg_next.DATAB
data_write[6] => data_write_reg_next.DATAB
data_write[7] => data_write_reg_next.DATAB
data_write[8] => rw_buf.DATAB
data_write[8] => data_read_reg_next[7].IN0
data_write[9] => rs_buf.DATAB
data_read[0] <= data_read_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_read[1] <= data_read_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_read[2] <= data_read_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_read[3] <= data_read_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_read[4] <= data_read_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_read[5] <= data_read_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_read[6] <= data_read_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_read[7] <= data_read_reg[7].DB_MAX_OUTPUT_PORT_TYPE
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => data_write_reg_next.OUTPUTSELECT
send_enable => nextstate.send1.DATAB
send_enable => rs_buf.OUTPUTSELECT
send_enable => rw_buf.OUTPUTSELECT
send_enable => Selector10.IN3
send_enable => data_read_reg_next[0].OUTPUTSELECT
send_enable => data_read_reg_next[1].OUTPUTSELECT
send_enable => data_read_reg_next[2].OUTPUTSELECT
send_enable => data_read_reg_next[3].OUTPUTSELECT
send_enable => data_read_reg_next[4].OUTPUTSELECT
send_enable => data_read_reg_next[5].OUTPUTSELECT
send_enable => data_read_reg_next[6].OUTPUTSELECT
send_enable => data_read_reg_next[7].OUTPUTSELECT
send_enable => data_read_reg_next[7].IN1
send_enable => Selector0.IN4
busy <= busy_reg.DB_MAX_OUTPUT_PORT_TYPE
dio[0] <> dio[0]
dio[1] <> dio[1]
dio[2] <> dio[2]
dio[3] <> dio[3]
dio[4] <> dio[4]
dio[5] <> dio[5]
dio[6] <> dio[6]
dio[7] <> dio[7]
en_l <= en_reg.DB_MAX_OUTPUT_PORT_TYPE
rw_l <= rw_reg.DB_MAX_OUTPUT_PORT_TYPE
rs_l <= rs_reg.DB_MAX_OUTPUT_PORT_TYPE
pon_l <= <VCC>
blon_l <= <VCC>


|top_module|sub_module_ram:B
clk => memorycontroller:ctl.clk
reset => memorycontroller:ctl.reset
addr[0] => memorycontroller:ctl.addr[0]
addr[0] => seg7:dp11.I[0]
addr[1] => memorycontroller:ctl.addr[1]
addr[1] => seg7:dp11.I[1]
addr[2] => memorycontroller:ctl.addr[2]
addr[2] => seg7:dp11.I[2]
addr[3] => memorycontroller:ctl.addr[3]
addr[3] => seg7:dp11.I[3]
addr[4] => memorycontroller:ctl.addr[4]
addr[4] => seg7:dp12.I[0]
addr[5] => memorycontroller:ctl.addr[5]
addr[5] => seg7:dp12.I[1]
addr[6] => memorycontroller:ctl.addr[6]
addr[6] => seg7:dp12.I[2]
addr[7] => memorycontroller:ctl.addr[7]
addr[7] => seg7:dp12.I[3]
data_write[0] => memorycontroller:ctl.data_write[0]
data_write[0] => seg7:dp21.I[0]
data_write[1] => memorycontroller:ctl.data_write[1]
data_write[1] => seg7:dp21.I[1]
data_write[2] => memorycontroller:ctl.data_write[2]
data_write[2] => seg7:dp21.I[2]
data_write[3] => memorycontroller:ctl.data_write[3]
data_write[3] => seg7:dp21.I[3]
data_write[4] => memorycontroller:ctl.data_write[4]
data_write[4] => seg7:dp22.I[0]
data_write[5] => memorycontroller:ctl.data_write[5]
data_write[5] => seg7:dp22.I[1]
data_write[6] => memorycontroller:ctl.data_write[6]
data_write[6] => seg7:dp22.I[2]
data_write[7] => memorycontroller:ctl.data_write[7]
data_write[7] => seg7:dp22.I[3]
data_read_r[0] <= memorycontroller:ctl.data_read_r[0]
data_read_r[1] <= memorycontroller:ctl.data_read_r[1]
data_read_r[2] <= memorycontroller:ctl.data_read_r[2]
data_read_r[3] <= memorycontroller:ctl.data_read_r[3]
data_read_r[4] <= memorycontroller:ctl.data_read_r[4]
data_read_r[5] <= memorycontroller:ctl.data_read_r[5]
data_read_r[6] <= memorycontroller:ctl.data_read_r[6]
data_read_r[7] <= memorycontroller:ctl.data_read_r[7]
data_read[0] <= memorycontroller:ctl.data_read[0]
data_read[1] <= memorycontroller:ctl.data_read[1]
data_read[2] <= memorycontroller:ctl.data_read[2]
data_read[3] <= memorycontroller:ctl.data_read[3]
data_read[4] <= memorycontroller:ctl.data_read[4]
data_read[5] <= memorycontroller:ctl.data_read[5]
data_read[6] <= memorycontroller:ctl.data_read[6]
data_read[7] <= memorycontroller:ctl.data_read[7]
mem => memorycontroller:ctl.mem
rw => memorycontroller:ctl.rw
ready <= memorycontroller:ctl.ready
ad[0] <= memorycontroller:ctl.ad[0]
ad[1] <= memorycontroller:ctl.ad[1]
ad[2] <= memorycontroller:ctl.ad[2]
ad[3] <= memorycontroller:ctl.ad[3]
ad[4] <= memorycontroller:ctl.ad[4]
ad[5] <= memorycontroller:ctl.ad[5]
ad[6] <= memorycontroller:ctl.ad[6]
ad[7] <= memorycontroller:ctl.ad[7]
ad[8] <= memorycontroller:ctl.ad[8]
ad[9] <= memorycontroller:ctl.ad[9]
ad[10] <= memorycontroller:ctl.ad[10]
ad[11] <= memorycontroller:ctl.ad[11]
ad[12] <= memorycontroller:ctl.ad[12]
ad[13] <= memorycontroller:ctl.ad[13]
ad[14] <= memorycontroller:ctl.ad[14]
ad[15] <= memorycontroller:ctl.ad[15]
ad[16] <= memorycontroller:ctl.ad[16]
ad[17] <= memorycontroller:ctl.ad[17]
ad[18] <= memorycontroller:ctl.ad[18]
ad[19] <= memorycontroller:ctl.ad[19]
dio[0] <> memorycontroller:ctl.dio[0]
dio[1] <> memorycontroller:ctl.dio[1]
dio[2] <> memorycontroller:ctl.dio[2]
dio[3] <> memorycontroller:ctl.dio[3]
dio[4] <> memorycontroller:ctl.dio[4]
dio[5] <> memorycontroller:ctl.dio[5]
dio[6] <> memorycontroller:ctl.dio[6]
dio[7] <> memorycontroller:ctl.dio[7]
dio[8] <> memorycontroller:ctl.dio[8]
dio[9] <> memorycontroller:ctl.dio[9]
dio[10] <> memorycontroller:ctl.dio[10]
dio[11] <> memorycontroller:ctl.dio[11]
dio[12] <> memorycontroller:ctl.dio[12]
dio[13] <> memorycontroller:ctl.dio[13]
dio[14] <> memorycontroller:ctl.dio[14]
dio[15] <> memorycontroller:ctl.dio[15]
we_n <= memorycontroller:ctl.we_n
oe_n <= memorycontroller:ctl.oe_n
ce_n <= memorycontroller:ctl.ce_n
lb_n <= <GND>
ub_n <= <GND>
segoutL[0] <= seg7:dp11.Seg[0]
segoutL[1] <= seg7:dp11.Seg[1]
segoutL[2] <= seg7:dp11.Seg[2]
segoutL[3] <= seg7:dp11.Seg[3]
segoutL[4] <= seg7:dp11.Seg[4]
segoutL[5] <= seg7:dp11.Seg[5]
segoutL[6] <= seg7:dp11.Seg[6]
segoutL[7] <= seg7:dp12.Seg[0]
segoutL[8] <= seg7:dp12.Seg[1]
segoutL[9] <= seg7:dp12.Seg[2]
segoutL[10] <= seg7:dp12.Seg[3]
segoutL[11] <= seg7:dp12.Seg[4]
segoutL[12] <= seg7:dp12.Seg[5]
segoutL[13] <= seg7:dp12.Seg[6]
segoutM[0] <= seg7:dp21.Seg[0]
segoutM[1] <= seg7:dp21.Seg[1]
segoutM[2] <= seg7:dp21.Seg[2]
segoutM[3] <= seg7:dp21.Seg[3]
segoutM[4] <= seg7:dp21.Seg[4]
segoutM[5] <= seg7:dp21.Seg[5]
segoutM[6] <= seg7:dp21.Seg[6]
segoutM[7] <= seg7:dp22.Seg[0]
segoutM[8] <= seg7:dp22.Seg[1]
segoutM[9] <= seg7:dp22.Seg[2]
segoutM[10] <= seg7:dp22.Seg[3]
segoutM[11] <= seg7:dp22.Seg[4]
segoutM[12] <= seg7:dp22.Seg[5]
segoutM[13] <= seg7:dp22.Seg[6]
segoutR[0] <= seg7:dp13.Seg[0]
segoutR[1] <= seg7:dp13.Seg[1]
segoutR[2] <= seg7:dp13.Seg[2]
segoutR[3] <= seg7:dp13.Seg[3]
segoutR[4] <= seg7:dp13.Seg[4]
segoutR[5] <= seg7:dp13.Seg[5]
segoutR[6] <= seg7:dp13.Seg[6]
segoutR[7] <= seg7:dp23.Seg[0]
segoutR[8] <= seg7:dp23.Seg[1]
segoutR[9] <= seg7:dp23.Seg[2]
segoutR[10] <= seg7:dp23.Seg[3]
segoutR[11] <= seg7:dp23.Seg[4]
segoutR[12] <= seg7:dp23.Seg[5]
segoutR[13] <= seg7:dp23.Seg[6]
segoutR[14] <= <GND>
segoutR[15] <= <GND>
segoutR[16] <= <GND>
segoutR[17] <= <GND>
segoutR[18] <= <GND>
segoutR[19] <= <GND>
segoutR[20] <= <VCC>
segoutR[21] <= <GND>
segoutR[22] <= <GND>
segoutR[23] <= <GND>
segoutR[24] <= <GND>
segoutR[25] <= <GND>
segoutR[26] <= <GND>
segoutR[27] <= <VCC>


|top_module|sub_module_ram:B|memorycontroller:ctl
clk => tri_reg.CLK
clk => oe_reg.CLK
clk => we_reg.CLK
clk => data_write_reg[0].CLK
clk => data_write_reg[1].CLK
clk => data_write_reg[2].CLK
clk => data_write_reg[3].CLK
clk => data_write_reg[4].CLK
clk => data_write_reg[5].CLK
clk => data_write_reg[6].CLK
clk => data_write_reg[7].CLK
clk => data_read_reg[0].CLK
clk => data_read_reg[1].CLK
clk => data_read_reg[2].CLK
clk => data_read_reg[3].CLK
clk => data_read_reg[4].CLK
clk => data_read_reg[5].CLK
clk => data_read_reg[6].CLK
clk => data_read_reg[7].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => addr_reg[7].CLK
clk => state~1.DATAIN
reset => tri_reg.PRESET
reset => oe_reg.PRESET
reset => we_reg.PRESET
reset => data_write_reg[0].ACLR
reset => data_write_reg[1].ACLR
reset => data_write_reg[2].ACLR
reset => data_write_reg[3].ACLR
reset => data_write_reg[4].ACLR
reset => data_write_reg[5].ACLR
reset => data_write_reg[6].ACLR
reset => data_write_reg[7].ACLR
reset => data_read_reg[0].ACLR
reset => data_read_reg[1].ACLR
reset => data_read_reg[2].ACLR
reset => data_read_reg[3].ACLR
reset => data_read_reg[4].ACLR
reset => data_read_reg[5].ACLR
reset => data_read_reg[6].ACLR
reset => data_read_reg[7].ACLR
reset => addr_reg[0].ACLR
reset => addr_reg[1].ACLR
reset => addr_reg[2].ACLR
reset => addr_reg[3].ACLR
reset => addr_reg[4].ACLR
reset => addr_reg[5].ACLR
reset => addr_reg[6].ACLR
reset => addr_reg[7].ACLR
reset => state~3.DATAIN
addr[0] => addr_next.DATAA
addr[1] => addr_next.DATAA
addr[2] => addr_next.DATAA
addr[3] => addr_next.DATAA
addr[4] => addr_next.DATAA
addr[5] => addr_next.DATAA
addr[6] => addr_next.DATAA
addr[7] => addr_next.DATAA
data_write[0] => data_write_next.DATAB
data_write[1] => data_write_next.DATAB
data_write[2] => data_write_next.DATAB
data_write[3] => data_write_next.DATAB
data_write[4] => data_write_next.DATAB
data_write[5] => data_write_next.DATAB
data_write[6] => data_write_next.DATAB
data_write[7] => data_write_next.DATAB
data_read_r[0] <= data_read_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[1] <= data_read_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[2] <= data_read_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[3] <= data_read_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[4] <= data_read_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[5] <= data_read_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[6] <= data_read_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[7] <= data_read_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_read[0] <= data_read[0].DB_MAX_OUTPUT_PORT_TYPE
data_read[1] <= data_read[1].DB_MAX_OUTPUT_PORT_TYPE
data_read[2] <= data_read[2].DB_MAX_OUTPUT_PORT_TYPE
data_read[3] <= data_read[3].DB_MAX_OUTPUT_PORT_TYPE
data_read[4] <= data_read[4].DB_MAX_OUTPUT_PORT_TYPE
data_read[5] <= data_read[5].DB_MAX_OUTPUT_PORT_TYPE
data_read[6] <= data_read[6].DB_MAX_OUTPUT_PORT_TYPE
data_read[7] <= data_read[7].DB_MAX_OUTPUT_PORT_TYPE
mem => nextstate.OUTPUTSELECT
mem => nextstate.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => Selector0.IN2
rw => nextstate.DATAA
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => nextstate.DATAA
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
ad[0] <= addr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
ad[1] <= addr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
ad[2] <= addr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
ad[3] <= addr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
ad[4] <= addr_reg[4].DB_MAX_OUTPUT_PORT_TYPE
ad[5] <= addr_reg[5].DB_MAX_OUTPUT_PORT_TYPE
ad[6] <= addr_reg[6].DB_MAX_OUTPUT_PORT_TYPE
ad[7] <= addr_reg[7].DB_MAX_OUTPUT_PORT_TYPE
ad[8] <= <GND>
ad[9] <= <GND>
ad[10] <= <GND>
ad[11] <= <GND>
ad[12] <= <GND>
ad[13] <= <GND>
ad[14] <= <GND>
ad[15] <= <GND>
ad[16] <= <GND>
ad[17] <= <GND>
ad[18] <= <GND>
ad[19] <= <GND>
dio[0] <> dio[0]
dio[1] <> dio[1]
dio[2] <> dio[2]
dio[3] <> dio[3]
dio[4] <> dio[4]
dio[5] <> dio[5]
dio[6] <> dio[6]
dio[7] <> dio[7]
dio[8] <> <GND>
dio[9] <> <GND>
dio[10] <> <GND>
dio[11] <> <GND>
dio[12] <> <GND>
dio[13] <> <GND>
dio[14] <> <GND>
dio[15] <> <GND>
we_n <= we_reg.DB_MAX_OUTPUT_PORT_TYPE
oe_n <= oe_reg.DB_MAX_OUTPUT_PORT_TYPE
ce_n <= <GND>


|top_module|sub_module_ram:B|seg7:dp11
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_ram:B|seg7:dp12
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_ram:B|seg7:dp21
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_ram:B|seg7:dp22
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_ram:B|seg7:dp13
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|sub_module_ram:B|seg7:dp23
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


