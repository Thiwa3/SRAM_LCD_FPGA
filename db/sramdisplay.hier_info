|top_module
clk => memorycontroller:ctl.clk
tsw[0] => memorycontroller:ctl.addr[0]
tsw[1] => memorycontroller:ctl.addr[1]
tsw[2] => memorycontroller:ctl.addr[2]
tsw[3] => memorycontroller:ctl.addr[3]
tsw[4] => memorycontroller:ctl.addr[4]
tsw[5] => memorycontroller:ctl.addr[5]
tsw[6] => memorycontroller:ctl.addr[6]
tsw[7] => memorycontroller:ctl.addr[7]
tsw[8] => memorycontroller:ctl.data_write[0]
tsw[9] => memorycontroller:ctl.data_write[1]
tsw[10] => memorycontroller:ctl.data_write[2]
tsw[11] => memorycontroller:ctl.data_write[3]
tsw[12] => memorycontroller:ctl.data_write[4]
tsw[13] => memorycontroller:ctl.data_write[5]
tsw[14] => memorycontroller:ctl.data_write[6]
tsw[15] => memorycontroller:ctl.data_write[7]
tsw[16] => ~NO_FANOUT~
tsw[17] => ~NO_FANOUT~
psw[0] => memorycontroller:ctl.reset
psw[1] => ~NO_FANOUT~
psw[2] => memorycontroller:ctl.mem
psw[3] => memorycontroller:ctl.rw
ad[0] << memorycontroller:ctl.ad[0]
ad[1] << memorycontroller:ctl.ad[1]
ad[2] << memorycontroller:ctl.ad[2]
ad[3] << memorycontroller:ctl.ad[3]
ad[4] << memorycontroller:ctl.ad[4]
ad[5] << memorycontroller:ctl.ad[5]
ad[6] << memorycontroller:ctl.ad[6]
ad[7] << memorycontroller:ctl.ad[7]
ad[8] << memorycontroller:ctl.ad[8]
ad[9] << memorycontroller:ctl.ad[9]
ad[10] << memorycontroller:ctl.ad[10]
ad[11] << memorycontroller:ctl.ad[11]
ad[12] << memorycontroller:ctl.ad[12]
ad[13] << memorycontroller:ctl.ad[13]
ad[14] << memorycontroller:ctl.ad[14]
ad[15] << memorycontroller:ctl.ad[15]
ad[16] << memorycontroller:ctl.ad[16]
ad[17] << memorycontroller:ctl.ad[17]
ad[18] << memorycontroller:ctl.ad[18]
ad[19] << memorycontroller:ctl.ad[19]
dio[0] <> memorycontroller:ctl.dio[0]
dio[1] <> memorycontroller:ctl.dio[1]
dio[2] <> memorycontroller:ctl.dio[2]
dio[3] <> memorycontroller:ctl.dio[3]
dio[4] <> memorycontroller:ctl.dio[4]
dio[5] <> memorycontroller:ctl.dio[5]
dio[6] <> memorycontroller:ctl.dio[6]
dio[7] <> memorycontroller:ctl.dio[7]
dio[8] <> memorycontroller:ctl.dio[8]
dio[9] <> memorycontroller:ctl.dio[9]
dio[10] <> memorycontroller:ctl.dio[10]
dio[11] <> memorycontroller:ctl.dio[11]
dio[12] <> memorycontroller:ctl.dio[12]
dio[13] <> memorycontroller:ctl.dio[13]
dio[14] <> memorycontroller:ctl.dio[14]
dio[15] <> memorycontroller:ctl.dio[15]
we_n << memorycontroller:ctl.we_n
oe_n << memorycontroller:ctl.oe_n
ce_n << memorycontroller:ctl.ce_n
lb_n << <GND>
ub_n << <GND>
segout[0] << seg7:dp1.Seg[0]
segout[1] << seg7:dp1.Seg[1]
segout[2] << seg7:dp1.Seg[2]
segout[3] << seg7:dp1.Seg[3]
segout[4] << seg7:dp1.Seg[4]
segout[5] << seg7:dp1.Seg[5]
segout[6] << seg7:dp1.Seg[6]
segout[7] << seg7:dp2.Seg[0]
segout[8] << seg7:dp2.Seg[1]
segout[9] << seg7:dp2.Seg[2]
segout[10] << seg7:dp2.Seg[3]
segout[11] << seg7:dp2.Seg[4]
segout[12] << seg7:dp2.Seg[5]
segout[13] << seg7:dp2.Seg[6]


|top_module|memorycontroller:ctl
clk => tri_reg.CLK
clk => oe_reg.CLK
clk => we_reg.CLK
clk => data_write_reg[0].CLK
clk => data_write_reg[1].CLK
clk => data_write_reg[2].CLK
clk => data_write_reg[3].CLK
clk => data_write_reg[4].CLK
clk => data_write_reg[5].CLK
clk => data_write_reg[6].CLK
clk => data_write_reg[7].CLK
clk => data_read_reg[0].CLK
clk => data_read_reg[1].CLK
clk => data_read_reg[2].CLK
clk => data_read_reg[3].CLK
clk => data_read_reg[4].CLK
clk => data_read_reg[5].CLK
clk => data_read_reg[6].CLK
clk => data_read_reg[7].CLK
clk => addr_reg[0].CLK
clk => addr_reg[1].CLK
clk => addr_reg[2].CLK
clk => addr_reg[3].CLK
clk => addr_reg[4].CLK
clk => addr_reg[5].CLK
clk => addr_reg[6].CLK
clk => addr_reg[7].CLK
clk => state~1.DATAIN
reset => tri_reg.PRESET
reset => oe_reg.PRESET
reset => we_reg.PRESET
reset => data_write_reg[0].ACLR
reset => data_write_reg[1].ACLR
reset => data_write_reg[2].ACLR
reset => data_write_reg[3].ACLR
reset => data_write_reg[4].ACLR
reset => data_write_reg[5].ACLR
reset => data_write_reg[6].ACLR
reset => data_write_reg[7].ACLR
reset => data_read_reg[0].ACLR
reset => data_read_reg[1].ACLR
reset => data_read_reg[2].ACLR
reset => data_read_reg[3].ACLR
reset => data_read_reg[4].ACLR
reset => data_read_reg[5].ACLR
reset => data_read_reg[6].ACLR
reset => data_read_reg[7].ACLR
reset => addr_reg[0].ACLR
reset => addr_reg[1].ACLR
reset => addr_reg[2].ACLR
reset => addr_reg[3].ACLR
reset => addr_reg[4].ACLR
reset => addr_reg[5].ACLR
reset => addr_reg[6].ACLR
reset => addr_reg[7].ACLR
reset => state~3.DATAIN
addr[0] => addr_next.DATAA
addr[1] => addr_next.DATAA
addr[2] => addr_next.DATAA
addr[3] => addr_next.DATAA
addr[4] => addr_next.DATAA
addr[5] => addr_next.DATAA
addr[6] => addr_next.DATAA
addr[7] => addr_next.DATAA
data_write[0] => data_write_next.DATAB
data_write[1] => data_write_next.DATAB
data_write[2] => data_write_next.DATAB
data_write[3] => data_write_next.DATAB
data_write[4] => data_write_next.DATAB
data_write[5] => data_write_next.DATAB
data_write[6] => data_write_next.DATAB
data_write[7] => data_write_next.DATAB
data_read_r[0] <= data_read_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[1] <= data_read_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[2] <= data_read_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[3] <= data_read_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[4] <= data_read_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[5] <= data_read_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[6] <= data_read_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_read_r[7] <= data_read_reg[7].DB_MAX_OUTPUT_PORT_TYPE
data_read[0] <= data_read[0].DB_MAX_OUTPUT_PORT_TYPE
data_read[1] <= data_read[1].DB_MAX_OUTPUT_PORT_TYPE
data_read[2] <= data_read[2].DB_MAX_OUTPUT_PORT_TYPE
data_read[3] <= data_read[3].DB_MAX_OUTPUT_PORT_TYPE
data_read[4] <= data_read[4].DB_MAX_OUTPUT_PORT_TYPE
data_read[5] <= data_read[5].DB_MAX_OUTPUT_PORT_TYPE
data_read[6] <= data_read[6].DB_MAX_OUTPUT_PORT_TYPE
data_read[7] <= data_read[7].DB_MAX_OUTPUT_PORT_TYPE
mem => nextstate.OUTPUTSELECT
mem => nextstate.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => addr_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => data_write_next.OUTPUTSELECT
mem => Selector0.IN2
rw => nextstate.DATAA
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => data_write_next.OUTPUTSELECT
rw => nextstate.DATAA
ready <= ready.DB_MAX_OUTPUT_PORT_TYPE
ad[0] <= addr_reg[0].DB_MAX_OUTPUT_PORT_TYPE
ad[1] <= addr_reg[1].DB_MAX_OUTPUT_PORT_TYPE
ad[2] <= addr_reg[2].DB_MAX_OUTPUT_PORT_TYPE
ad[3] <= addr_reg[3].DB_MAX_OUTPUT_PORT_TYPE
ad[4] <= addr_reg[4].DB_MAX_OUTPUT_PORT_TYPE
ad[5] <= addr_reg[5].DB_MAX_OUTPUT_PORT_TYPE
ad[6] <= addr_reg[6].DB_MAX_OUTPUT_PORT_TYPE
ad[7] <= addr_reg[7].DB_MAX_OUTPUT_PORT_TYPE
ad[8] <= <GND>
ad[9] <= <GND>
ad[10] <= <GND>
ad[11] <= <GND>
ad[12] <= <GND>
ad[13] <= <GND>
ad[14] <= <GND>
ad[15] <= <GND>
ad[16] <= <GND>
ad[17] <= <GND>
ad[18] <= <GND>
ad[19] <= <GND>
dio[0] <> dio[0]
dio[1] <> dio[1]
dio[2] <> dio[2]
dio[3] <> dio[3]
dio[4] <> dio[4]
dio[5] <> dio[5]
dio[6] <> dio[6]
dio[7] <> dio[7]
dio[8] <> <GND>
dio[9] <> <GND>
dio[10] <> <GND>
dio[11] <> <GND>
dio[12] <> <GND>
dio[13] <> <GND>
dio[14] <> <GND>
dio[15] <> <GND>
we_n <= we_reg.DB_MAX_OUTPUT_PORT_TYPE
oe_n <= oe_reg.DB_MAX_OUTPUT_PORT_TYPE
ce_n <= <GND>


|top_module|seg7:dp1
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|top_module|seg7:dp2
I[0] => Mux0.IN19
I[0] => Mux1.IN19
I[0] => Mux2.IN19
I[0] => Mux3.IN19
I[0] => Mux4.IN19
I[0] => Mux5.IN19
I[0] => Mux6.IN19
I[1] => Mux0.IN18
I[1] => Mux1.IN18
I[1] => Mux2.IN18
I[1] => Mux3.IN18
I[1] => Mux4.IN18
I[1] => Mux5.IN18
I[1] => Mux6.IN18
I[2] => Mux0.IN17
I[2] => Mux1.IN17
I[2] => Mux2.IN17
I[2] => Mux3.IN17
I[2] => Mux4.IN17
I[2] => Mux5.IN17
I[2] => Mux6.IN17
I[3] => Mux0.IN16
I[3] => Mux1.IN16
I[3] => Mux2.IN16
I[3] => Mux3.IN16
I[3] => Mux4.IN16
I[3] => Mux5.IN16
I[3] => Mux6.IN16
Seg[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
Seg[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Seg[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Seg[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Seg[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Seg[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
Seg[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


